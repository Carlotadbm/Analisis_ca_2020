enca_RAE <- read_delim("Corpus_RAE_20200501.csv", delim = ";")
#Enca: corpus académicos
#1 de mayo de 2020
library(tidyverse)
'%ni%' <- Negate('%in%')
library(extrafont)
library(grDevices)
library(ggtext)
library(ggExtra)
library(broom.mixed)
library(lme4)
enca_RAE <- read_delim("Corpus_RAE_20200501.csv", delim = ";")
#casos
enca_RAE %>%
count(CORPUS)
nrow(enca_RAE)
#gráfico formas de casa
unique(enca_RAE$Forma_casa)
unique(enca_RAE$Tipo_observacion)
enca_RAE_casa <- enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
filter(Tipo_observacion %ni% c("Refrán", "Oralidad popular"))
unique(enca_RAE_casa$Forma_casa)
unique(enca_RAE_casa$Tipo_observacion)
enca_RAE_casa %>%
count(Indicacion_fecha)
enca_RAE_casa %>%
count(Indicacion_fecha)
yheight <- max(count(enca_RAE_casa, Fecha_procesada)["n"])
#Crear gráfico
yheight <- max(count(enca_RAE_casa, Fecha_procesada)["n"])
ggplot(enca_RAE_casa, aes(x=Fecha_procesada, fill=Indicacion_fecha)) +
geom_dotplot(binwidth =20, binpositions="all", stackgroups = T, dotsize = 0.93) +
labs(title="*Ca* vs. *cas* en la historia (corpus académicos)", x="Año", fill = "Fecha y Cordemáforo", y = "Número de ocurrencias") +
facet_wrap(~Forma_casa) +
coord_fixed(ratio=18.6*yheight) + #esto recorta el eje y
scale_y_continuous(limits=c(0, 1), expand = c(0, 0), breaks = seq(0, 10, 10/yheight), labels=seq(0,yheight)*10) + #esto hace que tenga significado
scale_fill_manual(values=c('darkgoldenrod1', 'white', 'lightgray', 'darkgrey', 'black', 'red')) +
theme_bw(base_family = "Times New Roman", base_size = 12) +
theme(plot.title = element_markdown())
#yheight_marcacion <- max(count(enca_RAE_tipo_obs, Fecha_procesada)["n"]) sale demasiado apretado
yheight_marcacion <- 75
ggplot(enca_RAE_tipo_obs, aes(x=Fecha_procesada, fill=Tipo_observacion)) +
geom_dotplot(binwidth =20, binpositions="all", stackgroups = T, dotsize = 0.91) +
labs(title="Marcación diafásica de *ca* vs. *cas* en la historia (corpus académicos)", x="Año", fill = "Marcación diafásica", y = "Número de ocurrencias") +
facet_wrap(~Forma_casa) +
coord_fixed(ratio=18.2*yheight_marcacion) + #esto recorta el eje y
scale_y_continuous(limits=c(0, 1), expand = c(0, 0), breaks = seq(0, 10, 10/yheight_marcacion), labels=seq(0,yheight_marcacion)*10) + #esto hace que tenga significado
scale_fill_manual(values=c('white', 'gold', 'cadetblue2', 'blue', 'black', 'darkcyan')) +
theme_bw(base_family = "Times New Roman", base_size = 12) +
theme(plot.title = element_markdown())
#Tipo observación
enca_RAE_tipo_obs <- enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
mutate(Tipo_observacion = ifelse(Tipo_observacion == "Refrán", "Oralidad popular",
ifelse(Tipo_observacion == "ambiguo", "Ambiguo",
ifelse(Tipo_observacion == "Locución", "Mímesis oralidad popular",
ifelse(Tipo_observacion == "no marcado", "No marcado", Tipo_observacion)))))
#yheight_marcacion <- max(count(enca_RAE_tipo_obs, Fecha_procesada)["n"]) sale demasiado apretado
yheight_marcacion <- 75
ggplot(enca_RAE_tipo_obs, aes(x=Fecha_procesada, fill=Tipo_observacion)) +
geom_dotplot(binwidth =20, binpositions="all", stackgroups = T, dotsize = 0.91) +
labs(title="Marcación diafásica de *ca* vs. *cas* en la historia (corpus académicos)", x="Año", fill = "Marcación diafásica", y = "Número de ocurrencias") +
facet_wrap(~Forma_casa) +
coord_fixed(ratio=18.2*yheight_marcacion) + #esto recorta el eje y
scale_y_continuous(limits=c(0, 1), expand = c(0, 0), breaks = seq(0, 10, 10/yheight_marcacion), labels=seq(0,yheight_marcacion)*10) + #esto hace que tenga significado
scale_fill_manual(values=c('white', 'gold', 'cadetblue2', 'blue', 'black', 'darkcyan')) +
theme_bw(base_family = "Times New Roman", base_size = 12) +
theme(plot.title = element_markdown())
#Tipo observación sin CORDEMÁFORO
enca_RAE %>%
count(Indicacion_fecha)
##Formas de "casa" a lo largo del tiempo, por tipo de observación (figura 2)
#Limpiar tabla
enca_RAE %>%
distinct(Forma_casa)
enca_RAE_tipo_obs <- enca_RAE %>%
filter(Indicacion_fecha %ni% c("rojo", "ambar")) %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
mutate(Tipo_observacion = ifelse(Tipo_observacion == "Refrán", "Oralidad popular",
ifelse(Tipo_observacion == "ambiguo", "Ambiguo",
ifelse(Tipo_observacion == "Locución", "Mímesis oralidad popular",
ifelse(Tipo_observacion == "no marcado", "No marcado", Tipo_observacion)))))
#Crear gráfico
yheight_marcacion <- 75 #para el recorte el eje y, ver abajo
ggplot(enca_RAE_tipo_obs, aes(x=Fecha_procesada, fill=Tipo_observacion)) +
geom_dotplot(binwidth =20, binpositions="all", stackgroups = T, dotsize = 0.91) +
labs(title="Marcación diafásica de *ca* vs. *cas* en la historia (corpus académicos)", x="Año", fill = "Marcación diafásica", y = "Número de ocurrencias") +
facet_wrap(~Forma_casa) +
coord_fixed(ratio=18.2*yheight_marcacion) + #esto recorta el eje y
scale_y_continuous(limits=c(0, 1), expand = c(0, 0), breaks = seq(0, 10, 10/yheight_marcacion), labels=seq(0,yheight_marcacion)*10) + #esto hace que tenga significado
scale_fill_manual(values=c('white', 'gold', 'cadetblue2', 'blue', 'black', 'darkcyan')) +
theme_bw(base_family = "Times New Roman", base_size = 12) +
theme(plot.title = element_markdown())
enca_RAE_casa_autores <- enca_RAE_casa %>%
count(Autor) %>%
arrange(desc(n))
set.seed(234) #para que no me cambien locamente los gráficos si los tengo que rehacer
enca_RAE_casa_autor <- enca_RAE_casa %>%
group_by(Autor, Forma_casa) %>%
sample_n(1)
yheight_autor <- 14 #esta vez lo he calculado a ojo, siempre un poquito más
ggplot(enca_RAE_casa_autor, aes(x=Fecha_procesada, fill= Pais)) +
geom_dotplot(binwidth =20, binpositions="all", stackgroups = T, dotsize = 1.3, show.legend = T) +
labs(title="*Ca* vs. *cas* en la historia (corpus académicos): un ejemplo por autor", x="Año", y = "Número de ocurrencias", fill = "País") +
facet_wrap(~Forma_casa) +
coord_fixed(ratio=26.2*yheight_autor) + #esto recorta el eje y
scale_y_continuous(limits=c(0, 1), expand = c(0, 0), breaks = seq(0, 5, 5/yheight_autor), labels=seq(0,yheight_autor)*5) + #esto hace que tenga significado
scale_fill_manual(values = c("cadetblue2", "gold", "white", "black", "darkcyan", "blue")) +
theme_bw(base_family = "Times New Roman", base_size = 12) +
theme(plot.title = element_markdown())
##Formas de "casa" a lo largo del tiempo y país, un ejemplo por autor (figura 3)
enca_RAE_casa_autores <- enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
filter(Tipo_observacion %ni% c("Refrán", "Oralidad popular")) %>%
count(Autor) %>%
arrange(desc(n))
set.seed(234) #para que no me cambien locamente los gráficos si los tengo que rehacer
enca_RAE_casa_autores
#Casos por autor
enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
filter(Tipo_observacion %ni% c("Refrán", "Oralidad popular")) %>%
count(Autor) %>%
arrange(desc(n))
enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
filter(Tipo_observacion %ni% c("Refrán", "Oralidad popular")) %>%
group_by(Autor, Forma_casa) %>%
sample_n(1)
#Fijar la muestra aleatoria
set.seed(234)
#Crear la tabla
enca_RAE_casa_autor <- enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
filter(Tipo_observacion %ni% c("Refrán", "Oralidad popular")) %>%
group_by(Autor, Forma_casa) %>%
sample_n(1)
yheight_autor <- 14 #para el recorte el eje y, ver abajo
ggplot(enca_RAE_casa_autor, aes(x=Fecha_procesada, fill= Pais)) +
geom_dotplot(binwidth =20, binpositions="all", stackgroups = T, dotsize = 1.3, show.legend = T) +
labs(title="*Ca* vs. *cas* en la historia (corpus académicos): un ejemplo por autor", x="Año", y = "Número de ocurrencias", fill = "País") +
facet_wrap(~Forma_casa) +
coord_fixed(ratio=26.2*yheight_autor) + #esto recorta el eje y
scale_y_continuous(limits=c(0, 1), expand = c(0, 0), breaks = seq(0, 5, 5/yheight_autor), labels=seq(0,yheight_autor)*5) + #esto hace que tenga significado
scale_fill_manual(values = c("cadetblue2", "gold", "white", "black", "darkcyan", "blue")) +
theme_bw(base_family = "Times New Roman", base_size = 12) +
theme(plot.title = element_markdown())
enca_RAE %>%
group_by(Forma_casa) %>%
count(Prep_anterior) %>%
mutate(Total = sum(n), Perc = round(n/Total*100,1))
enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
filter(Prep_posterior %in% c("no", "de")) %>% #excluyo "sin_complemento", "posesivo", "no, e"
group_by(Forma_casa) %>%
count(Prep_posterior) %>%
mutate(Total = sum(n), Perc = round(n/Total*100,1))
## Forma de "casa" y uso de la preposición posterior
unique(enca_RAE$Prep_posterior)
## Forma de "casa" y uso de la preposición posterior
enca_RAE %>%
distinct(Prep_posterior)
enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
filter(Prep_posterior %in% c("no", "de")) %>% #excluyo "sin_complemento", "posesivo", "no, e"
group_by(Forma_casa) %>%
count(Prep_posterior) %>%
mutate(Total = sum(n), Perc = round(n/Total*100,1))
#modelo
enca_RAE_prep_post <- enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
filter(Prep_posterior %in% c("no", "de")) #excluyo "sin_complemento", "posesivo", "no, e"
enca_RAE_prep_post$Prep_posterior <- factor(enca_RAE_prep_post$Prep_posterior, levels = c("no", "de"))
#Con este relevelling predecimos la probabilidad de "de"
crae_de_glm <- glmer(factor(Prep_posterior) ~ Forma_casa + (1 | Autor), family = "binomial", data = enca_RAE_prep_post)
library(lme4)
#modelo
enca_RAE_prep_post <- enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
filter(Prep_posterior %in% c("no", "de")) #excluyo "sin_complemento", "posesivo", "no, e"
enca_RAE_prep_post$Prep_posterior <- factor(enca_RAE_prep_post$Prep_posterior, levels = c("no", "de"))
#Con este relevelling predecimos la probabilidad de "de"
crae_de_glm <- glmer(factor(Prep_posterior) ~ Forma_casa + (1 | Autor), family = "binomial", data = enca_RAE_prep_post)
summary(crae_de_glm)
library(broom.mixed)
library(lme4)
enca_RAE_prep_post$Prep_posterior <- factor(enca_RAE_prep_post$Prep_posterior, levels = c("no", "de")) #Relevelling para predecir la probabilidad de "de"
crae_de_glm <- glmer(factor(Prep_posterior) ~ Forma_casa + (1 | Autor), family = "binomial", data = enca_RAE_prep_post)
#Glmer (tabla 9)
enca_RAE_prep_post <- enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
filter(Prep_posterior %in% c("no", "de")) #excluyo "sin_complemento", "posesivo", "no, e"
enca_RAE_prep_post$Prep_posterior <- factor(enca_RAE_prep_post$Prep_posterior, levels = c("no", "de")) #Relevelling para predecir la probabilidad de "de"
crae_de_glm <- glmer(factor(Prep_posterior) ~ Forma_casa + (1 | Autor), family = "binomial", data = enca_RAE_prep_post)
library(lme4)
library(broom.mixed)
#Glmer (tabla 9)
enca_RAE_prep_post <- enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
filter(Prep_posterior %in% c("no", "de")) #excluyo "sin_complemento", "posesivo", "no, e"
enca_RAE_prep_post$Prep_posterior <- factor(enca_RAE_prep_post$Prep_posterior, levels = c("no", "de")) #Relevelling para predecir la probabilidad de "de"
crae_de_glm <- glmer(factor(Prep_posterior) ~ Forma_casa + (1 | Autor), family = "binomial", data = enca_RAE_prep_post)
summary(crae_de_glm)
range(resid(crae_de_glm)) #parece que estos residuals están otra escala que cuando usas summary()
hist(resid(crae_de_glm))#parece una distribución bastante normal
crae_de_glm_tidy <- tidy(crae_de_glm, exponentiate = T, conf.int = T) #statistic es el z-value
crae_de_glm_tidy
#Prep anterior
unique(enca_RAE$Prep_anterior)
enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
mutate(Prep_anterior = ifelse(Prep_anterior == "no?", "no", Prep_anterior)) %>%
filter(Prep_anterior %in% c("en", "a", "an", "no")) %>%
filter(Prep_posterior %in% c("no", "de")) %>% #excluyo "sin_complemento", "posesivo", "no, e"
filter(Verbo %in% c("estado", "movimiento")) %>%
group_by(Verbo, Forma_casa) %>%
count(Prep_anterior) %>%
mutate(Total = sum(n), Perc = round(n/Total*100,1))
## Forma de "casa" y uso de la preposición posterior (tabla 10)
enca_RAE %>%
distinct(Prep_anterior)
enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
mutate(Prep_anterior = ifelse(Prep_anterior == "no?", "no", Prep_anterior)) %>%
filter(Prep_anterior %in% c("en", "a", "an", "no")) %>%
filter(Prep_posterior %in% c("no", "de")) %>% #excluyo "sin_complemento", "posesivo", "no, e"
filter(Verbo %in% c("estado", "movimiento")) %>%
group_by(Verbo, Forma_casa) %>%
count(Prep_anterior) %>%
mutate(Total = sum(n), Perc = round(n/Total*100,1))
#Los casos de "no" en prep_anterior me pegan mayoritariamente del autor este que tiene 68 casos, veamos
enca_RAE %>%
mutate(Forma_casa = ifelse(Forma_casa == "cas(a)", "cas", Forma_casa)) %>%
mutate(Prep_anterior = ifelse(Prep_anterior == "no?", "no", Prep_anterior)) %>%
filter(Prep_anterior %in% c("en", "a", "an", "no")) %>%
filter(Prep_posterior %in% c("no", "de")) %>% #excluyo "sin_complemento", "posesivo", "no, e"
filter(Verbo %in% c("estado", "movimiento")) %>%
filter(Prep_anterior == "no") %>%
filter(Forma_casa == "ca") %>%
count(Autor) %>%
mutate(Total = sum(n))
CORDIAM <- read_delim("CORDIAM_todo_042020.csv", delim = ";")
#Cas
CORDIAM_cas <- CORDIAM %>%
filter(Casa == "cas") %>%
filter(Articulo_enca %ni% c("Ambiguo", "Error?"))
#Cas
CORDIAM_cas <- CORDIAM %>%
filter(Casa == "cas") %>%
filter(Articulo_enca %ni% c("Ambiguo", "Error?"))
CORDIAM %>%
filter(Casa == "cas") %>%
filter(Articulo_enca %ni% c("Ambiguo", "Error?"))
'%ni%' <- Negate('%in%')
#Cas
CORDIAM_cas <- CORDIAM %>%
filter(Casa == "cas") %>%
filter(Articulo_enca %ni% c("Ambiguo", "Error?"))
unique(CORDIAM_cas$Articulo_enca)
sort(CORDIAM_cas$Fecha_procesada)
CORDIAM_cas %>%
count(Pais_actual, Tipo_textual)
#gráfico formas de casa
yheight <- max(count(CORDIAM_cas, Fecha_procesada)["n"])
ggplot(CORDIAM_cas, aes(x=Fecha_procesada, fill=Tipo_textual)) + #, color = Documento <- lo quito, pero me ha servido para ver que los cuatro más modernos son de cuarto documentos distintos
geom_dotplot(binwidth =20, binpositions="all", stackgroups = T, dotsize = 0.5) +
labs(title="*Cas* en la historia del español americano (CORDIAM)", x="Año", fill = "Tipo textual", y = "Número de ocurrencias") +
coord_fixed(ratio=20*yheight) + #esto recorta el eje y
scale_y_continuous(limits=c(0, 1), expand = c(0, 0), breaks = seq(0, 5, 5/yheight), labels=seq(0,yheight)*10) + #esto hace que tenga significado
scale_fill_manual(values=c('darkgoldenrod1', 'white', 'darkcyan', 'darkgrey', 'black', 'red')) +
theme_bw(base_family = "Times New Roman", base_size = 12) +
theme(plot.title = element_markdown())
sort(CORDIAM_cas$Fecha_procesada)
CORDIAM_cas %>%
arrange(Fecha_procesada)
ggplot(CORDIAM_cas, aes(x=Fecha_procesada, fill=Pais_actual)) + #, color = Documento <- lo quito, pero me ha servido para ver que los cuatro más modernos son de cuarto documentos distintos
geom_dotplot(binwidth =20, binpositions="all", stackgroups = T, dotsize = 0.5) +
labs(title="*Cas* en la historia del español americano (CORDIAM)", x="Año", fill = "Pais_actual", y = "Número de ocurrencias") +
coord_fixed(ratio=20*yheight) + #esto recorta el eje y
scale_y_continuous(limits=c(0, 1), expand = c(0, 0), breaks = seq(0, 5, 5/yheight), labels=seq(0,yheight)*10) + #esto hace que tenga significado
#scale_fill_manual(values=c('darkgoldenrod1', 'white', 'darkcyan', 'darkgrey', 'black', 'red')) +
theme_bw(base_family = "Times New Roman", base_size = 12) +
theme(plot.title = element_markdown())
CODEA <- read_delim("CODEA_casa_cas_ca.csv", delim = ";")
CHARTA <- read_delim("CHARTA_casa_ca.csv", delim = ";")
CORDIAM <- CORDIAM %>%
select(Corpus, EjemploID, Búsqueda, DOCUMENTO, Fecha_procesada, Articulo_enca, Prep_anterior, Casa, Prep_posterior, Verbo)
CODEA <- CODEA %>%
select(Corpus, EjemploID, Búsqueda, DOCUMENTO, Fecha_procesada, Articulo_enca, Prep_anterior, Casa, Prep_posterior, Verbo)
CHARTA <- CHARTA %>%
select(Corpus, EjemploID, Búsqueda, DOCUMENTO, Fecha_procesada, Articulo_enca, Prep_anterior, Casa, Prep_posterior, Verbo)
Corp_docs <- rbind(CORDIAM, CODEA, CHARTA)
#Prep anterior y posterior
#Solo los válidos y los de Otra_preposicion (es decir: prep/no + casa + de/no SN)
Corp_docs_valido <- Corp_docs %>%
filter(Articulo_enca %in% c("Válida", "Otra_preposicion")) %>% #ejemplos válidos
filter(Casa == "casa") %>% #casa
filter(!is.na(Fecha_procesada)) %>%
mutate(Siglo = ifelse(Fecha_procesada < 1251, "XIII (1/2)",
ifelse(Fecha_procesada < 1301, "XIII (2/2)",
ifelse(Fecha_procesada < 1351, "XIV (1/2)",
ifelse(Fecha_procesada < 1401, "XIV (2/2)",
ifelse(Fecha_procesada < 1451, "XV (1/2)",
ifelse(Fecha_procesada < 1501, "XV (2/2)",
ifelse(Fecha_procesada < 1551, "XVI (1/2)",
ifelse(Fecha_procesada < 1601, "XVI (2/2)",
ifelse(Fecha_procesada < 1651, "XVII (1/2)",
ifelse(Fecha_procesada < 1701, "XVII (2/2)",
ifelse(Fecha_procesada < 1751, "XVIII (1/2)",
ifelse(Fecha_procesada < 1801, "XVIII (2/2)",
ifelse(Fecha_procesada < 1851, "XIX (1/2)", "XIX (2/2)"
)))))))))))))) %>%
mutate(Prep_anterior_proc = ifelse(Prep_anterior %in% c("en", "a", "enfrente de", "de", "hacia", "por", "junto a", "debajo de", "desde", "para"), "una preposición",
ifelse(Prep_anterior == "no", "sin preposición", "preposición doble (prep. + *en*)"))) %>%
mutate(Prep_posterior = ifelse(Prep_posterior == "no", "sin preposición", Prep_posterior))
Corp_docs_valido
#Prep anterior
Corp_docs_valido %>%
count(Prep_anterior_proc) %>%
mutate(Total = sum(n), Perc = round(n/Total*100, 1))
Corp_docs_valido_prep_ant <- Corp_docs_valido %>%
group_by(Corpus, Siglo) %>%
count(Prep_anterior_proc)
orp_docs_valido %>%
group_by(Corpus, Siglo) %>%
count(Prep_anterior_proc)
Corp_docs_valido %>%
group_by(Corpus, Siglo) %>%
count(Prep_anterior_proc)
#Preposición anterior:
Corp_docs_valido %>%
count(Prep_anterior_proc) %>%
mutate(Total = sum(n), Perc = round(n/Total*100, 1))
ggplot(Corp_docs_valido_prep_ant, aes(x=Siglo,y=n, group=Prep_anterior_proc)) + geom_col(aes(fill=Prep_anterior_proc), position = "fill") +
labs(title="Preposición que precede a *casa*", x="Siglo", y="Frecuencia de la preposición", fill="Preposición precedente") +
geom_text(aes(label = n), position = position_fill(vjust = .5)) + #al añadir geom_text(aes(label = n) le decimos que aparezcan los números en el gráfico
scale_fill_manual(values=c("dimgrey", "ghostwhite", "lightgrey")) +
theme_bw(base_family = "Times New Roman", base_size = 12) +
theme(plot.title = element_markdown(), legend.text = element_markdown(), axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~Corpus)
#Prep posterior
Corp_docs_valido %>%
count(Prep_posterior) %>%
mutate(Total = sum(n), Perc = round(n/Total*100, 1))
#Preposición anterior: ¿cuántas?, por siglo
Corp_docs_valido %>%
group_by(Corpus, Siglo) %>%
count(Prep_anterior_proc) %>%
View()
#Preposición posterior: ¿aparece?
Corp_docs_valido %>%
count(Prep_posterior) %>%
mutate(Total = sum(n), Perc = round(n/Total*100, 1))
Corp_docs_valido %>%
group_by(Corpus, Siglo) %>%
count(Prep_posterior) %>%
View()
#Preposición "en" con verbos de movimiento
unique(Corp_docs$Articulo_enca)
#Preposición "en" con verbos de movimiento
Corp_docs %>%
distinct(Articulo_enca)
#Preposición "en" con verbos de movimiento
Corp_docs %>%
distinct(Articulo_enca)
#Nueva tabla
Corp_docs_movimiento <- Corp_docs %>%
filter(Articulo_enca %in% c("Válida", "Sin término", "Incluible")) %>%
filter(Verbo == "movimiento") %>%
filter(Prep_anterior %in% c("a", "en")) %>%
filter(!is.na(Fecha_procesada)) %>%
mutate(Siglo = ifelse(Fecha_procesada < 1251, "XIII (1/2)",
ifelse(Fecha_procesada < 1301, "XIII (2/2)",
ifelse(Fecha_procesada < 1351, "XIV (1/2)",
ifelse(Fecha_procesada < 1401, "XIV (2/2)",
ifelse(Fecha_procesada < 1451, "XV (1/2)",
ifelse(Fecha_procesada < 1501, "XV (2/2)",
ifelse(Fecha_procesada < 1551, "XVI (1/2)",
ifelse(Fecha_procesada < 1601, "XVI (2/2)",
ifelse(Fecha_procesada < 1651, "XVII (1/2)",
ifelse(Fecha_procesada < 1701, "XVII (2/2)",
ifelse(Fecha_procesada < 1751, "XVIII (1/2)",
ifelse(Fecha_procesada < 1801, "XVIII (2/2)",
ifelse(Fecha_procesada < 1851, "XIX (1/2)", "XIX (2/2)"
))))))))))))))
Corp_docs_movimiento %>%
count(Prep_anterior) %>%
mutate(Total = sum(n), Perc = round(n/Total*100, 1))
Corp_docs_movimiento %>%
count(Prep_anterior) %>%
mutate(Total = sum(n), Perc = round(n/Total*100, 1))
Corp_docs_movimiento_count <- Corp_docs_movimiento %>%
group_by(Corpus, Siglo) %>%
count(Prep_anterior)
Corp_docs_movimiento %>%
group_by(Corpus, Siglo) %>%
count(Prep_anterior)
#A con verbos de estado
Corp_docs_estado <- Corp_docs %>%
filter(Articulo_enca %in% c("Válida", "Sin término", "Incluible")) %>%
filter(Verbo == "estado") %>%
filter(Prep_anterior %in% c("a", "en")) %>%
filter(!is.na(Fecha_procesada)) %>%
mutate(Siglo = ifelse(Fecha_procesada < 1251, "XIII (1/2)",
ifelse(Fecha_procesada < 1301, "XIII (2/2)",
ifelse(Fecha_procesada < 1351, "XIV (1/2)",
ifelse(Fecha_procesada < 1401, "XIV (2/2)",
ifelse(Fecha_procesada < 1451, "XV (1/2)",
ifelse(Fecha_procesada < 1501, "XV (2/2)",
ifelse(Fecha_procesada < 1551, "XVI (1/2)",
ifelse(Fecha_procesada < 1601, "XVI (2/2)",
ifelse(Fecha_procesada < 1651, "XVII (1/2)",
ifelse(Fecha_procesada < 1701, "XVII (2/2)",
ifelse(Fecha_procesada < 1751, "XVIII (1/2)",
ifelse(Fecha_procesada < 1801, "XVIII (2/2)",
ifelse(Fecha_procesada < 1851, "XIX (1/2)", "XIX (2/2)"
))))))))))))))
Corp_docs_estado %>%
count(Prep_anterior) %>%
mutate(Total = sum(n), Perc = round(n/Total*100, 1))
Corp_docs_estado_count <- Corp_docs_estado %>%
group_by(Corpus, Siglo) %>%
count(Prep_anterior)
Corp_docs_movimiento %>%
count(Prep_anterior, Verbo) %>%
mutate(Total = sum(n), Perc = round(n/Total*100, 1))
#Nueva tabla
Corp_docs_movimiento <- Corp_docs %>%
filter(Articulo_enca %in% c("Válida", "Sin término", "Incluible")) %>%
#filter(Verbo == "movimiento") %>%
filter(Prep_anterior %in% c("a", "en")) %>%
filter(!is.na(Fecha_procesada)) %>%
mutate(Siglo = ifelse(Fecha_procesada < 1251, "XIII (1/2)",
ifelse(Fecha_procesada < 1301, "XIII (2/2)",
ifelse(Fecha_procesada < 1351, "XIV (1/2)",
ifelse(Fecha_procesada < 1401, "XIV (2/2)",
ifelse(Fecha_procesada < 1451, "XV (1/2)",
ifelse(Fecha_procesada < 1501, "XV (2/2)",
ifelse(Fecha_procesada < 1551, "XVI (1/2)",
ifelse(Fecha_procesada < 1601, "XVI (2/2)",
ifelse(Fecha_procesada < 1651, "XVII (1/2)",
ifelse(Fecha_procesada < 1701, "XVII (2/2)",
ifelse(Fecha_procesada < 1751, "XVIII (1/2)",
ifelse(Fecha_procesada < 1801, "XVIII (2/2)",
ifelse(Fecha_procesada < 1851, "XIX (1/2)", "XIX (2/2)"
))))))))))))))
Corp_docs_movimiento %>%
count(Prep_anterior, Verbo) %>%
mutate(Total = sum(n), Perc = round(n/Total*100, 1))
#Nueva tabla
Corp_docs_movimiento <- Corp_docs %>%
filter(Articulo_enca %in% c("Válida", "Sin término", "Incluible")) %>%
filter(Verbo %in% c("movimiento", "estado")) %>%
filter(Prep_anterior %in% c("a", "en")) %>%
filter(!is.na(Fecha_procesada)) %>%
mutate(Siglo = ifelse(Fecha_procesada < 1251, "XIII (1/2)",
ifelse(Fecha_procesada < 1301, "XIII (2/2)",
ifelse(Fecha_procesada < 1351, "XIV (1/2)",
ifelse(Fecha_procesada < 1401, "XIV (2/2)",
ifelse(Fecha_procesada < 1451, "XV (1/2)",
ifelse(Fecha_procesada < 1501, "XV (2/2)",
ifelse(Fecha_procesada < 1551, "XVI (1/2)",
ifelse(Fecha_procesada < 1601, "XVI (2/2)",
ifelse(Fecha_procesada < 1651, "XVII (1/2)",
ifelse(Fecha_procesada < 1701, "XVII (2/2)",
ifelse(Fecha_procesada < 1751, "XVIII (1/2)",
ifelse(Fecha_procesada < 1801, "XVIII (2/2)",
ifelse(Fecha_procesada < 1851, "XIX (1/2)", "XIX (2/2)"
))))))))))))))
Corp_docs_movimiento %>%
count(Prep_anterior, Verbo) %>%
mutate(Total = sum(n), Perc = round(n/Total*100, 1))
count(Prep_anterior) %>%
mutate(Total = sum(n), Perc = round(n/Total*100, 1))
Corp_docs_movimiento %>%
group_by(Verbo)
Corp_docs_movimiento %>%
group_by(Verbo) %>%
count(Prep_anterior) %>%
mutate(Total = sum(n), Perc = round(n/Total*100, 1))
#Nueva tabla
Corp_docs_verbo <- Corp_docs %>%
filter(Articulo_enca %in% c("Válida", "Sin término", "Incluible")) %>%
filter(Verbo %in% c("movimiento", "estado")) %>%
filter(Prep_anterior %in% c("a", "en")) %>%
filter(!is.na(Fecha_procesada)) %>%
mutate(Siglo = ifelse(Fecha_procesada < 1251, "XIII (1/2)",
ifelse(Fecha_procesada < 1301, "XIII (2/2)",
ifelse(Fecha_procesada < 1351, "XIV (1/2)",
ifelse(Fecha_procesada < 1401, "XIV (2/2)",
ifelse(Fecha_procesada < 1451, "XV (1/2)",
ifelse(Fecha_procesada < 1501, "XV (2/2)",
ifelse(Fecha_procesada < 1551, "XVI (1/2)",
ifelse(Fecha_procesada < 1601, "XVI (2/2)",
ifelse(Fecha_procesada < 1651, "XVII (1/2)",
ifelse(Fecha_procesada < 1701, "XVII (2/2)",
ifelse(Fecha_procesada < 1751, "XVIII (1/2)",
ifelse(Fecha_procesada < 1801, "XVIII (2/2)",
ifelse(Fecha_procesada < 1851, "XIX (1/2)", "XIX (2/2)"
))))))))))))))
Corp_docs_verbo %>%
group_by(Verbo) %>%
group_by(Corpus, Siglo) %>%
count(Prep_anterior)
Corp_docs_verbo %>%
group_by(Verbo, Corpus, Siglo) %>%
count(Prep_anterior)
Corp_docs_verbo %>%
group_by(Verbo, Corpus, Siglo) %>%
count(Prep_anterior) %>%
View()
